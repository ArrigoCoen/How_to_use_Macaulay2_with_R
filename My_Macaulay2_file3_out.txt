Macaulay2, version 1.15
--loading configuration for package "FourTiTwo" from file /Users/arrigocoen/Library/Application Support/Macaulay2/init-FourTiTwo.m2
--loading configuration for package "Topcom" from file /Users/arrigocoen/Library/Application Support/Macaulay2/init-Topcom.m2
with packages: ConwayPolynomials, Elimination, IntegralClosure, InverseSystems, LLLBases, PrimaryDecomposition, ReesAlgebra, TangentCone, Truncations

i1 : ------------------------------------------------------------------
     --   Comparing equations of two rotations for 4-cycle networks  --
     ------------------------------------------------------------------
     -- file name = Macaulay2_Rotations/SolveK4_N_allow1112_for_N1vrN2.m2
     -- N_allowed = 1112 (taxa allow in each of the four sub-trees)
     -- First  rotation Ni = N1
     -- Second rotation Nj = N2
     -- How many equations: 12
     -- Date of creation: Tue Nov 03 19:05:28 2020
     -- Equation numbers = 7,8,9,22,23,24,28,29,30,31,32,33
     -- Generated by the function print_Solve_Ni_vr_Nj_Mat of the file 'Fn phylo R.R'
     -- Obs: the 'n=' are with respect to the N1 (non rotated) network
     
      R = QQ[ gam,z0,z1,z11,gamR,zR0,zR1,zR10 ]

o1 = R

o1 : PolynomialRing

i2 : 
      I = ideal(1-(2/3)*z11  -(  (1-gamR)*(1-(2/3)*zR0*zR10)+gamR*(1-(2/3)*zR10) ) ,
     	(1/3)*z11  -(  (1-gamR)*(1/3)*zR0*zR10+gamR*(1/3)*zR10 ) ,
     	(1/3)*z11  -(  (1-gamR)*(1/3)*zR0*zR10+gamR*(1/3)*zR10 ) ,
     	(1-gam)*(1-(2/3)*z11)+gam*(1-(2/3)*z0*z11)  -(  (1-gamR)*(1-(2/3)*zR1*zR0*zR10)+gamR*(1-(2/3)*zR10) ) ,
     	(1-gam)*(1/3)*z11+gam*(1/3)*z0*z11  -(  (1-gamR)*(1/3)*zR1*zR0*zR10+gamR*(1/3)*zR10 ) ,
     	(1-gam)*(1/3)*z11+gam*(1/3)*z0*z11  -(  (1-gamR)*(1/3)*zR1*zR0*zR10+gamR*(1/3)*zR10 ) ,
     	(1-gam)*(1-(2/3)*z1)+gam*(1/3)*z0  -(  (1-gamR)*(1-(2/3)*zR1)+gamR*(1/3)*zR0 ) ,
     	(1-gam)*(1/3)*z1+gam*(1-(2/3)*z0)  -(  (1-gamR)*(1/3)*zR1+gamR*(1-(2/3)*zR0) ) ,
     	(1-gam)*(1/3)*z1+gam*(1/3)*z0  -(  (1-gamR)*(1/3)*zR1+gamR*(1/3)*zR0 ) ,
     	(1-gam)*(1-(2/3)*z1*z11)+gam*(1-(2/3)*z11)  -(  1-(2/3)*zR0*zR10 ) ,
     	(1-gam)*(1/3)*z1*z11+gam*(1/3)*z11  -(  (1/3)*zR0*zR10 ) ,
     	(1-gam)*(1/3)*z1*z11+gam*(1/3)*z11  -(  (1/3)*zR0*zR10 ) )


o2 = ideal (- -gamR*zR0*zR10 + -gamR*zR10 + -zR0*zR10 - -z11, -gamR*zR0*zR10 - -gamR*zR10 - -zR0*zR10 + -z11, -gamR*zR0*zR10 - -gamR*zR10 - -zR0*zR10 + -z11, - -gamR*zR0*zR1*zR10 - -gam*z0*z11 + -zR0*zR1*zR10 + -gam*z11 + -gamR*zR10 - -z11, -gamR*zR0*zR1*zR10 + -gam*z0*z11 - -zR0*zR1*zR10 - -gam*z11 - -gamR*zR10 + -z11, -gamR*zR0*zR1*zR10 + -gam*z0*z11 - -zR0*zR1*zR10 - -gam*z11 - -gamR*zR10 + -z11, -gam*z0 + -gam*z1 - -gamR*zR0 - -gamR*zR1 - gam - -z1 + gamR + -zR1, - -gam*z0 - -gam*z1 + -gamR*zR0 + -gamR*zR1 + gam + -z1 - gamR - -zR1, -gam*z0 - -gam*z1 - -gamR*zR0 + -gamR*zR1 + -z1 - -zR1, -gam*z1*z11 - -gam*z11 - -z1*z11 + -zR0*zR10, - -gam*z1*z11 + -gam*z11 + -z1*z11 - -zR0*zR10, - -gam*z1*z11 + -gam*z11 + -z1*z11 - -zR0*zR10)


o2 : Ideal of R

i3 : 
      primaryDecomposition I
     

o3 = {ideal (zR0 - zR1, z11*gamR + gamR*zR10 - z11, gam*z1 - gamR*zR1 - gam - z1 + gamR + zR1, gam*z0 - gamR*zR1 - gam + gamR, gamR*zR1*zR10 - gamR*zR10 - zR1*zR10 + z11, z0*z1*zR10 - z1*zR1*zR10 - z0*z11 + z1*z11 - z1*zR10 + zR1*zR10, gamR zR1 - gamR  - 2gamR*zR1 + zR1, z0*z1*gamR - z1*gamR*zR1 - z0*z1 + z0*gamR - 2z1*gamR + z1*zR1 + gamR*zR1 + z1 - zR1, z0*z1*z11 - z1*z11*zR1 - z0*zR1*zR10 + z1*zR1*zR10 - z1*z11 + z11*zR1, zR1*zR10  - z11 zR10, z1*zR1*zR10  - z1*z11 ), ideal (zR10, z11, gam*z1 - gamR*zR1 - gam - z1 + gamR + zR1, gam*z0 - gamR*zR0 - gam + gamR), ideal (zR1 - 1, gamR, z1 - 1, z0 - 1, zR0*zR10 - z11), ideal (zR0, gamR, z11, z0 - 1, gam*z1 - gam - z1 + zR1), ideal (zR0, gamR, z11, z1 - zR1, gam), ideal (zR1 - 1, gamR, z1 - 1, gam, zR0*zR10 - z11), ideal (zR1 - 1, gamR, z0 - 1, gam - 1, zR0*zR10 - z11), ideal (z1*zR10 - zR0*zR10 + z11 - zR10, zR1  - 2zR1 + 1, gamR*zR1 + z1 - gamR - zR1, gam*zR1 - gam, zR0  + zR0*zR1 - 3zR0 - zR1 + 2, gamR*zR0 - z1 - gamR + 1, z11*zR0 + z11*zR1 - zR0*zR10 - zR1*zR10 - 2z11 + 2zR10, z1*zR0 + z1*zR1 - 2z1 - zR0 - zR1 + 2, gam*zR0 - gam, gam*z11 - gam*zR10, gam*z1 - gam, gam*z0 - gam - z1 + 1, gam ), ideal (z11 - zR10, z1 - zR0, gamR*zR1 - gamR + zR0 - zR1, zR0  - 2zR0 + 1, gamR*zR0 - gamR - zR0 + 1, gam*zR0 - gam, gamR  - 2gamR + 1, gam*gamR - gam, gam*z0 - gam - zR0 + 1, gam ), ideal (zR1  - 2zR1 + 1, z0*zR1 + z1*zR1 - z0 - z1 - 2zR1 + 2, zR0  + zR0*zR1 - 3zR0 - zR1 + 2, gamR*zR0 + gamR*zR1 - 2gamR - zR1 + 1, z11*zR0 + z11*zR1 - zR0*zR10 - zR1*zR10 - 2z11 + 2zR10, z1*zR0 + z1*zR1 - 2z1 - zR0 - zR1 + 2, z0*zR0 - z1*zR1 - z0 + z1 - zR0 + zR1, z0*z11 + z1*z11 - z0*zR10 - z1*zR10 - 2z11 + 2zR10, z1  - 2z1 + 1, z0*z1 - z0 - z1 + 1, gam*z1 - gamR*zR1 - gam - z1 + gamR + zR1, z0  - 2z0 + 1, gam*z0 + gamR*zR1 - gam - gamR - zR1 + 1, gamR*zR1*zR10 - gamR*zR10 + zR0*zR10 - zR1*zR10 - z11 + zR10, z11*gamR*zR1 - z11*gamR + zR0*zR10 - zR1*zR10 - z11 + zR10), ideal (z0*zR10 - zR0*zR10 + z11 - zR10, zR1  - 2zR1 + 1, zR0*zR1 - zR0 - zR1 + 1, gamR*zR1 + z0 - gamR - zR1, gam*zR1 - gam - zR1 + 1, zR0  - 2zR0 + 1, gamR*zR0 - z0 - gamR + 1, z11*zR0 + z11*zR1 - zR0*zR10 - zR1*zR10 - 2z11 + 2zR10, z0*zR0 + z0*zR1 - 2z0 - zR0 - zR1 + 2, gam*zR0 - gam - zR0 + 1, gam*z11 - gam*zR10 - z11 + zR10, gam*z1 - gam + z0 - z1, gam*z0 - gam - z0 + 1, gam  - 2gam + 1), ideal (z11 - zR10, z0 - zR0, gamR*zR1 - gamR + zR0 - zR1, zR0  - 2zR0 + 1, gamR*zR0 - gamR - zR0 + 1, gam*zR0 - gam - zR0 + 1, gamR  - 2gamR + 1, gam*gamR - gam - gamR + 1, gam*z1 - gam - z1 + zR0, gam  - 2gam + 1), ideal (z11 - zR10, gamR*zR1 - gamR + zR0 - zR1, zR0  - 2zR0 + 1, gamR*zR0 - gamR - zR0 + 1, z0*zR0 + z1*zR0 - z0 - z1 - 2zR0 + 2, gamR  - 2gamR + 1, z1*gamR + z1*zR0 - 2z1 - gamR - zR0

                                                     2                                                            2
     + 2, z0*gamR - z1*zR0 - z0 + z1 - gamR + zR0, z1  - 2z1 + 1, z0*z1 - z0 - z1 + 1, gam*z1 - gam - z1 + zR0, z0  - 2z0 + 1, gam*z0 - gam - zR0 + 1, z1*zR0*zR10 - z1*zR10 - zR0*zR10 + zR10)}

o3 : List
